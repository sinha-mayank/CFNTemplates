{
    "Conditions": {
        "AttachNAT2ACondition": {
            "Fn::And": [
                {
                    "Condition": "CreatePublicSubnet2Condition"
                },
                {
                    "Condition": "CreatePrivateSubnet2ACondition"
                }
            ]
        },
        "AttachNAT2BCondition": {
            "Fn::And": [
                {
                    "Condition": "CreatePublicSubnet2Condition"
                },
                {
                    "Condition": "CreatePrivateSubnet2BCondition"
                }
            ]
        },
        "CreatePrivateSubnet1ACondition": {
            "Fn::Equals": [
                {
                    "Ref": "CreatePrivateSubnet1A"
                },
                "True"
            ]
        },
        "CreatePrivateSubnet1BCondition": {
            "Fn::Equals": [
                {
                    "Ref": "CreatePrivateSubnet1B"
                },
                "True"
            ]
        },
        "CreatePrivateSubnet2ACondition": {
            "Fn::Equals": [
                {
                    "Ref": "CreatePrivateSubnet2A"
                },
                "True"
            ]
        },
        "CreatePrivateSubnet2BCondition": {
            "Fn::Equals": [
                {
                    "Ref": "CreatePrivateSubnet2B"
                },
                "True"
            ]
        },
        "CreatePublicSubnet2Condition": {
            "Fn::Equals": [
                {
                    "Ref": "CreatePublicSubnet2"
                },
                "True"
            ]
        },
        "NAT1EIPCondition": {
            "Fn::Or": [
                {
                    "Condition": "CreatePrivateSubnet1ACondition"
                },
                {
                    "Condition": "CreatePrivateSubnet1BCondition"
                }
            ]
        },
        "NAT2EIPCondition": {
            "Fn::Or": [
                {
                    "Condition": "AttachNAT2ACondition"
                },
                {
                    "Condition": "AttachNAT2BCondition"
                }
            ]
        }
    },
    "Parameters": {
        "AvailabilityZone1": {
            "Default": "ap-south-1a",
            "Description": "Select the first AvailabilityZone",
            "Type": "String"
        },
        "AvailabilityZone2": {
            "Default": "ap-south-1b",
            "Description": "Select the second AvailabilityZone",
            "Type": "String"
        },
        "CIDRPrivateSubnet1A": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Default": "10.0.0.0/19",
            "Description": "Enter the CIDR block for Private Subnet 1A",
            "Type": "String"
        },
        "CIDRPrivateSubnet1B": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Default": "10.0.192.0/21",
            "Description": "Enter the CIDR block for Private Subnet 1B",
            "Type": "String"
        },
        "CIDRPrivateSubnet2A": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Default": "10.0.32.0/19",
            "Description": "Enter the CIDR block for Private Subnet 2A",
            "Type": "String"
        },
        "CIDRPrivateSubnet2B": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Default": "10.0.200.0/21",
            "Description": "Enter the CIDR block for Private Subnet 2B",
            "Type": "String"
        },
        "CIDRPublicSubnet1": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Default": "10.0.128.0/20",
            "Description": "Enter the CIDR range for PublicSubnet1 in AZ1",
            "Type": "String"
        },
        "CIDRPublicSubnet2": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Default": "10.0.144.0/20",
            "Description": "Enter the CIDR range for PublicSubnet2 in AZ2",
            "Type": "String"
        },
        "CIDRVPC": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Default": "10.0.0.0/16",
            "Description": "Enter the CIDR Range for the VPC to be created",
            "Type": "String"
        },
        "CreatePrivateSubnet1A": {
            "AllowedValues": [
                "True",
                "False"
            ],
            "Default": "False",
            "Description": "Select True or False, for creating Private Subnet 1A in AZ1",
            "Type": "String"
        },
        "CreatePrivateSubnet1B": {
            "AllowedValues": [
                "True",
                "False"
            ],
            "Default": "False",
            "Description": "Select True or False, for creating Private Subnet 1B in AZ1",
            "Type": "String"
        },
        "CreatePrivateSubnet2A": {
            "AllowedValues": [
                "True",
                "False"
            ],
            "Default": "False",
            "Description": "Select True or False, for creating Private Subnet 2A in AZ2",
            "Type": "String"
        },
        "CreatePrivateSubnet2B": {
            "AllowedValues": [
                "True",
                "False"
            ],
            "Default": "False",
            "Description": "Select True or False, for creating Private Subnet 2B in AZ2",
            "Type": "String"
        },
        "CreatePublicSubnet2": {
            "AllowedValues": [
                "True",
                "False"
            ],
            "Default": "False",
            "Description": "Select True or False, for creating Public Subnet 2 in AZ2",
            "Type": "String"
        },
        "EC2KeyPairName": {
            "Description": "Select the KEY Pair to be used for connecting the Instance",
            "Type": "AWS::EC2::KeyPair::KeyName"
        },
        "InstanceType": {
            "AllowedValues": [
                "t2.nano",
                "t2.micro",
                "t2.small",
                "t2.medium",
                "t2.large",
                "m3.medium",
                "m3.large",
                "m4.large"
            ],
            "Default": "t2.micro",
            "Description": "Select the appropriate instance type of your choice",
            "Type": "String"
        },
        "SSHLocationBastion": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "Default": "0.0.0.0/0",
            "Type": "String"
        }
    },
    "Resources": {
        "AttachPublicSubnet1toRouteTable": {
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicSubnetRouteTable"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "AttachPublicSubnet2toRouteTable": {
            "Condition": "CreatePublicSubnet2Condition",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PublicSubnetRouteTable"
                },
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "BastionHost": {
            "Properties": {
                "ImageId": "ami-ffbdd790",
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Ref": "EC2KeyPairName"
                },
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": "true",
                        "DeleteOnTermination": "true",
                        "DeviceIndex": "0",
                        "GroupSet": [
                            {
                                "Ref": "InstanceSecurityGroup"
                            }
                        ],
                        "SubnetId": {
                            "Ref": "PublicSubnet1"
                        }
                    }
                ],
                "Tags": [
                    {
                        "Key": "IoCluster",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "BastionHost"
                                ]
                            ]
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::Instance"
        },
        "IGW": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "IoCluster",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "IGW"
                                ]
                            ]
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::InternetGateway"
        },
        "IGWAttachVPC": {
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "IGW"
                },
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::VPCGatewayAttachment"
        },
        "InstanceSecurityGroup": {
            "Properties": {
                "GroupDescription": "This security group provides access to Bastion Host from given CIDR range",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": {
                            "Ref": "SSHLocationBastion"
                        },
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    }
                ],
                "Tags": [
                    {
                        "Key": "IoCluster",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "SecurityGroup"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "NAT1EIP": {
            "Condition": "NAT1EIPCondition",
            "DependsOn": "IGWAttachVPC",
            "Properties": {
                "Domain": "vpc"
            },
            "Type": "AWS::EC2::EIP"
        },
        "NAT2EIP": {
            "Condition": "NAT2EIPCondition",
            "DependsOn": "IGWAttachVPC",
            "Properties": {
                "Domain": "vpc"
            },
            "Type": "AWS::EC2::EIP"
        },
        "NATGateway1": {
            "Condition": "NAT1EIPCondition",
            "DependsOn": "IGWAttachVPC",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "NAT1EIP",
                        "AllocationId"
                    ]
                },
                "SubnetId": {
                    "Ref": "PublicSubnet1"
                }
            },
            "Type": "AWS::EC2::NatGateway"
        },
        "NATGateway2": {
            "Condition": "NAT2EIPCondition",
            "DependsOn": "IGWAttachVPC",
            "Properties": {
                "AllocationId": {
                    "Fn::GetAtt": [
                        "NAT2EIP",
                        "AllocationId"
                    ]
                },
                "SubnetId": {
                    "Ref": "PublicSubnet2"
                }
            },
            "Type": "AWS::EC2::NatGateway"
        },
        "PrivateSubnet1A": {
            "Condition": "CreatePrivateSubnet1ACondition",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone1"
                },
                "CidrBlock": {
                    "Ref": "CIDRPrivateSubnet1A"
                },
                "Tags": [
                    {
                        "Key": "IoCluster",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "PrivateSubnet1A"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "PrivateSubnet1ARoute": {
            "Condition": "CreatePrivateSubnet1ACondition",
            "DependsOn": "PrivateSubnet1ARouteTable",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NATGateway1"
                },
                "RouteTableId": {
                    "Ref": "PrivateSubnet1ARouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "PrivateSubnet1ARouteTable": {
            "Condition": "CreatePrivateSubnet1ACondition",
            "Properties": {
                "Tags": [
                    {
                        "Key": "IoCluster",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "PrivateSubnet1ARouteTable"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "PrivateSubnet1ARouteTableAssociation": {
            "Condition": "CreatePrivateSubnet1ACondition",
            "DependsOn": "PrivateSubnet1ARoute",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateSubnet1ARouteTable"
                },
                "SubnetId": {
                    "Ref": "PrivateSubnet1A"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "PrivateSubnet1B": {
            "Condition": "CreatePrivateSubnet1BCondition",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone1"
                },
                "CidrBlock": {
                    "Ref": "CIDRPrivateSubnet1B"
                },
                "Tags": [
                    {
                        "Key": "IoCluster",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "PrivateSubnet1B"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "PrivateSubnet1BNetworkAcl": {
            "Condition": "CreatePrivateSubnet1BCondition",
            "Properties": {
                "Tags": [
                    {
                        "Key": "IoCluster",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "NACLPrivateSubnet1B"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::NetworkAcl"
        },
        "PrivateSubnet1BNetworkAclAssociation": {
            "Condition": "CreatePrivateSubnet1BCondition",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PrivateSubnet1BNetworkAcl"
                },
                "SubnetId": {
                    "Ref": "PrivateSubnet1B"
                }
            },
            "Type": "AWS::EC2::SubnetNetworkAclAssociation"
        },
        "PrivateSubnet1BNetworkAclEntryInbound": {
            "Condition": "CreatePrivateSubnet1BCondition",
            "Properties": {
                "CidrBlock": "10.0.0.0/16",
                "Egress": "true",
                "NetworkAclId": {
                    "Ref": "PrivateSubnet1BNetworkAcl"
                },
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "100"
            },
            "Type": "AWS::EC2::NetworkAclEntry"
        },
        "PrivateSubnet1BRoute": {
            "Condition": "CreatePrivateSubnet1BCondition",
            "DependsOn": "PrivateSubnet1BRouteTable",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NATGateway1"
                },
                "RouteTableId": {
                    "Ref": "PrivateSubnet1BRouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "PrivateSubnet1BRouteTable": {
            "Condition": "CreatePrivateSubnet1BCondition",
            "Properties": {
                "Tags": [
                    {
                        "Key": "IoCluster",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "PrivateSubnet1BRouteTable"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "PrivateSubnet1BRouteTableAssociation": {
            "Condition": "CreatePrivateSubnet1BCondition",
            "DependsOn": "PrivateSubnet1BRoute",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateSubnet1BRouteTable"
                },
                "SubnetId": {
                    "Ref": "PrivateSubnet1B"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "PrivateSubnet2A": {
            "Condition": "CreatePrivateSubnet2ACondition",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone2"
                },
                "CidrBlock": {
                    "Ref": "CIDRPrivateSubnet2A"
                },
                "Tags": [
                    {
                        "Key": "IoCluster",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "PrivateSubnet2A"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "PrivateSubnet2ARoute": {
            "Condition": "AttachNAT2ACondition",
            "DependsOn": "PrivateSubnet2ARouteTable",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NATGateway2"
                },
                "RouteTableId": {
                    "Ref": "PrivateSubnet2ARouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "PrivateSubnet2ARouteTable": {
            "Condition": "AttachNAT2ACondition",
            "Properties": {
                "Tags": [
                    {
                        "Key": "IoCluster",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "PrivateSubnet2ARouteTable"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "PrivateSubnet2ARouteTableAssociation": {
            "Condition": "AttachNAT2ACondition",
            "DependsOn": "PrivateSubnet2ARoute",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateSubnet2ARouteTable"
                },
                "SubnetId": {
                    "Ref": "PrivateSubnet2A"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "PrivateSubnet2B": {
            "Condition": "CreatePrivateSubnet2BCondition",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone2"
                },
                "CidrBlock": {
                    "Ref": "CIDRPrivateSubnet2B"
                },
                "Tags": [
                    {
                        "Key": "IoCluster",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "PrivateSubnet2B"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "PrivateSubnet2BNetworkAcl": {
            "Condition": "CreatePrivateSubnet2BCondition",
            "Properties": {
                "Tags": [
                    {
                        "Key": "IoCluster",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "NACLPrivateSubnet2B"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::NetworkAcl"
        },
        "PrivateSubnet2BNetworkAclAssociation": {
            "Condition": "CreatePrivateSubnet2BCondition",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "PrivateSubnet2BNetworkAcl"
                },
                "SubnetId": {
                    "Ref": "PrivateSubnet2B"
                }
            },
            "Type": "AWS::EC2::SubnetNetworkAclAssociation"
        },
        "PrivateSubnet2BNetworkAclEntryInbound": {
            "Condition": "CreatePrivateSubnet2BCondition",
            "Properties": {
                "CidrBlock": "0.0.0.0/0",
                "Egress": "true",
                "NetworkAclId": {
                    "Ref": "PrivateSubnet2BNetworkAcl"
                },
                "Protocol": "-1",
                "RuleAction": "allow",
                "RuleNumber": "100"
            },
            "Type": "AWS::EC2::NetworkAclEntry"
        },
        "PrivateSubnet2BRoute": {
            "Condition": "AttachNAT2BCondition",
            "DependsOn": "PrivateSubnet2BRouteTable",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "NatGatewayId": {
                    "Ref": "NATGateway2"
                },
                "RouteTableId": {
                    "Ref": "PrivateSubnet2BRouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "PrivateSubnet2BRouteTable": {
            "Condition": "AttachNAT2BCondition",
            "Properties": {
                "Tags": [
                    {
                        "Key": "IoCluster",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "PrivateSubnet2BRouteTable"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "PrivateSubnet2BRouteTableAssociation": {
            "Condition": "AttachNAT2BCondition",
            "DependsOn": "PrivateSubnet2BRoute",
            "Properties": {
                "RouteTableId": {
                    "Ref": "PrivateSubnet2ARouteTable"
                },
                "SubnetId": {
                    "Ref": "PrivateSubnet2B"
                }
            },
            "Type": "AWS::EC2::SubnetRouteTableAssociation"
        },
        "PublicSubnet1": {
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone1"
                },
                "CidrBlock": {
                    "Ref": "CIDRPublicSubnet1"
                },
                "MapPublicIpOnLaunch": "true",
                "Tags": [
                    {
                        "Key": "IoCluster",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "PublicSubnet1"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "PublicSubnet2": {
            "Condition": "CreatePublicSubnet2Condition",
            "Properties": {
                "AvailabilityZone": {
                    "Ref": "AvailabilityZone2"
                },
                "CidrBlock": {
                    "Ref": "CIDRPublicSubnet2"
                },
                "MapPublicIpOnLaunch": "true",
                "Tags": [
                    {
                        "Key": "IoCluster",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "PublicSubnet2"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::Subnet"
        },
        "PublicSubnetRoute": {
            "DependsOn": "IGWAttachVPC",
            "Properties": {
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "IGW"
                },
                "RouteTableId": {
                    "Ref": "PublicSubnetRouteTable"
                }
            },
            "Type": "AWS::EC2::Route"
        },
        "PublicSubnetRouteTable": {
            "Properties": {
                "Tags": [
                    {
                        "Key": "IoCluster",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "RouteTable"
                                ]
                            ]
                        }
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                }
            },
            "Type": "AWS::EC2::RouteTable"
        },
        "VPC": {
            "Properties": {
                "CidrBlock": {
                    "Ref": "CIDRVPC"
                },
                "EnableDnsHostnames": "true",
                "EnableDnsSupport": "true",
                "InstanceTenancy": "default",
                "Tags": [
                    {
                        "Key": "IoCluster",
                        "Value": {
                            "Ref": "AWS::StackName"
                        }
                    },
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Join": [
                                "-",
                                [
                                    {
                                        "Ref": "AWS::StackName"
                                    },
                                    "VPC"
                                ]
                            ]
                        }
                    }
                ]
            },
            "Type": "AWS::EC2::VPC"
        }
    }
}
